openapi: 3.0.0
info:
  title: Task Service API
  description: API documentation for managing tasks
  version: "1.0.0"

paths:
  /tasks:
    get:
      summary: Get all tasks
      tags:
        - Tasks
      responses:
        '200':
          description: List of tasks
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                  payload:
                    type: array
                    items:
                      $ref: '#/components/schemas/TaskWithEmployee'

    post:
      summary: Create a new task
      tags:
        - Tasks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskInput'
      responses:
        '201':
          description: Task created
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                  payload:
                    $ref: '#/components/schemas/Task'

  /tasks/{id}:
    get:
      summary: Get task by ID
      tags:
        - Tasks
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Task found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                  payload:
                    $ref: '#/components/schemas/TaskWithEmployee'

    put:
      summary: Update task
      tags:
        - Tasks
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskInput'
      responses:
        '200':
          description: Task updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                  payload:
                    $ref: '#/components/schemas/Task'

    delete:
      summary: Delete task
      tags:
        - Tasks
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Task deleted

  /tasks/{id}/assign:
    put:
      summary: Assign an employee to a task
      tags:
        - Tasks
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - employeeId
              properties:
                employeeId:
                  type: integer
      responses:
        '200':
          description: Employee assigned
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                  payload:
                    $ref: '#/components/schemas/Task'

components:
  schemas:
    Task:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        status:
          type: string
          enum: [TODO, IN_PROGRESS, DONE]
        dueDate:
          type: string
          format: date-time
        employeeId:
          type: integer

    TaskWithEmployee:
      allOf:
        - $ref: '#/components/schemas/Task'
        - type: object
          properties:
            employee:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                email:
                  type: string

    TaskInput:
      type: object
      required:
        - title
        - status
        - employeeId
      properties:
        title:
          type: string
        description:
          type: string
        status:
          type: string
          enum: [TODO, IN_PROGRESS, DONE]
        dueDate:
          type: string
          format: date-time
        employeeId:
          type: integer
